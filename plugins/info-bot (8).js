import fs from 'fs';

const handler = (m) => m;

handler.all = async function (m) {
    const chat = global.db.data.chats[m.chat];
    if (chat.isBaneed) return; // Evita responder si el chat estÃ¡ bloqueado.

    // Lista de frases y respuestas.
    const frases = new Map([
    ["buenos dÃ­as", "Â¡Buenos dÃ­as! Espero que tengas un excelente dÃ­a"],
    ["bot", "Â¡Hola como estas soy un bot creado por Sebas Y tu Marido David"],
    ["como estas", "Â¡bien gracias por preguntar "],
    [".on welcome", "Â¡lo usaste mal ya que este bot tiene la configuraciÃ³n de primero welcome y despues el off y el on ejemplo welcome on"],
    ["buenas noches", "Â¡Buenas noches! Descansa mucho ğŸ˜´"],
    ["gracias", "Â¡De nada! ğŸ˜Š"],
    ["te amo", "Â¡Yo tambiÃ©n te quiero mucho! ğŸ’•"],
    ["de nada", "Â¡Eres muy amable! ğŸ˜Š"],
    ["te extraÃ±o", "Â¡Yo tambiÃ©n te extraÃ±o! Espero que podamos hablar mÃ¡s seguido."],
    ["perdÃ³n", "No te preocupes, todo estÃ¡ bien."],
    ["me gusta", "Â¡Me alegra mucho!"],
    ["me saludas", "Â¡Hola! Â¿CÃ³mo estÃ¡s? ğŸ˜Š"],
    ]);

    // Normaliza el texto del mensaje para que sea insensible a mayÃºsculas/minÃºsculas.
    const text = m.text.toLowerCase().trim();

    // Busca si el texto del mensaje coincide con alguna frase preprogramada.
    if (frases.has(text)) {
        const respuesta = frases.get(text);
        conn.reply(m.chat, respuesta, m); // EnvÃ­a la respuesta al chat.
    }

    return true;
};

export default handler;
